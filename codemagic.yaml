# .codemagic.yaml
workflows:
  android-build:
    name: Android Build with Explicit Gradle and KSP
    instance_type: mac_mini_m1
    max_build_duration: 60
    environment:
      groups:
        - android
      vars:
        GRADLE_OPTS: "-Xmx4g -XX:MaxMetaspaceSize=1g"

    triggering:
      branch_patterns:
        - pattern: main
          include: true
          
    scripts:
      - name: Setup Java Environment
        script: |
          export JAVA_HOME=$(/usr/libexec/java_home -v 17)
          java -version
          echo "JAVA_HOME=$JAVA_HOME" >> $CM_ENV
      
      - name: Install Android SDK Tools
        script: |
          ANDROID_SDK_TOOLS_VERSION="10406996_latest"
          ANDROID_TOOLS_OS="mac"
          
          mkdir -p /tmp/android-sdk/cmdline-tools/latest
          curl -L --retry 3 --retry-delay 5 -o commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-${ANDROID_TOOLS_OS}-${ANDROID_SDK_TOOLS_VERSION}.zip
          unzip commandlinetools.zip -d /tmp/android-sdk/cmdline-tools/latest
          mv /tmp/android-sdk/cmdline-tools/latest/cmdline-tools/* /tmp/android-sdk/cmdline-tools/latest/
          
          export ANDROID_HOME=/tmp/android-sdk
          export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$PATH" >> $CM_ENV # Füge $PATH einmal am Ende hinzu, damit es zuerst die neuen Pfade nutzt
          
          yes | sdkmanager --sdk_root=$ANDROID_HOME --licenses
          sdkmanager --sdk_root=$ANDROID_HOME "build-tools;34.0.0" "platforms;android-34" "cmake;3.22.1"
          echo "Android SDK Tools installed and licensed."

      - name: Install Gradle 8.7 (Global) # <-- HIER ÄNDERN WIR DIE VERSION AUF 8.7
        script: |
          GRADLE_VERSION="8.7" # <-- JETZT AUF 8.7
          GRADLE_ZIP="gradle-$GRADLE_VERSION-bin.zip"
          GRADLE_URL="https://services.gradle.org/distributions/$GRADLE_ZIP"
          
          echo "Downloading and installing Gradle $GRADLE_VERSION from: $GRADLE_URL"
          curl -L --retry 3 --retry-delay 5 -o "$GRADLE_ZIP" "$GRADLE_URL"
          
          if [ $? -ne 0 ]; then
            echo "ERROR: Failed to download Gradle $GRADLE_VERSION from $GRADLE_URL. Curl exit code: $?"
            exit 1
          fi

          unzip -o "$GRADLE_ZIP" -d /tmp
          export GRADLE_HOME="/tmp/gradle-$GRADLE_VERSION"
          export PATH="$GRADLE_HOME/bin:$PATH" >> $CM_ENV
          
          gradle --version
          echo "Gradle $GRADLE_VERSION installed globally."

      - name: Make gradlew executable
        script: |
          chmod +x gradlew
          echo "gradlew is now executable."

      - name: Generate Gradle Wrapper # <-- HIER ÄNDERN WIR AUF 8.7
        script: |
          echo "Generating Gradle wrapper using installed Gradle."
          gradle wrapper --gradle-version 8.7 --distribution-type all # <-- JETZT AUF 8.7
          ls -l gradle/wrapper/
          cat gradle/wrapper/gradle-wrapper.properties
          ls -l gradlew
          echo "Gradle Wrapper generated successfully."
      
      - name: Clean Project
        script: |
          echo "Cleaning project"
          ./gradlew clean --stacktrace --info || echo "Clean task failed"
          echo "Project cleaned successfully."
      
      - name: Build KSP Debug (Optional, nur wenn du KSP nutzt)
        script: |
          echo "Running KSP Debug"
          mkdir -p app/schemas
          chmod -R u+w app/schemas
          ./gradlew :app:kspDebugKotlin --stacktrace --info || { echo "KSP Debug task failed. Check logs above."; exit 1; }
          echo "KSP Debug completed. Verifying schema files."
          ls -l app/schemas/ || echo "No schema files found in app/schemas"
          find app/build/generated/ksp/debug/ -type f || echo "No KSP generated files found"


      - name: Build Android Debug APK
        script: |
          echo "Running assembleDebug"
          ./gradlew assembleDebug --stacktrace --info
          echo "Debug APK build complete."
          
    artifacts:
      - app/build/outputs/apk/debug/app-debug.apk
      - app/build/outputs/bundle/debug/app-debug.aab
      - app/build/generated/ksp/**/*
      - app/schemas/*.json
      
    publishing:
      email:
        recipients:
          - deine.email@example.com
